(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[60],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return c},kt:function(){return m}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),l=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=l(e.components);return n.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),d=l(r),m=a,f=d["".concat(p,".").concat(m)]||d[m]||s[m]||o;return r?n.createElement(f,i(i({ref:t},c),{},{components:r})):n.createElement(f,i({ref:t},c))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=d;var u={};for(var p in t)hasOwnProperty.call(t,p)&&(u[p]=t[p]);u.originalType=e,u.mdxType="string"==typeof e?e:a,i[1]=u;for(var l=2;l<o;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},4877:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return i},metadata:function(){return u},toc:function(){return p},default:function(){return c}});var n=r(2122),a=r(9756),o=(r(7294),r(3905)),i={id:"secure-your-endpoints",title:"How to secure your endpoints",sidebar_label:"How to secure your endpoints",slug:"/secure-your-endpoints"},u={unversionedId:"secure-your-endpoints",id:"secure-your-endpoints",isDocsHomePage:!1,title:"How to secure your endpoints",description:"Guard.authorize",source:"@site/docs/secure-your-endpoints.md",sourceDirName:".",slug:"/secure-your-endpoints",permalink:"/blitz-guard/docs/secure-your-endpoints",editUrl:"https://github.com/ntgussoni/blitz-guard/edit/main/docs/docs/secure-your-endpoints.md",version:"current",sidebar_label:"How to secure your endpoints",frontMatter:{id:"secure-your-endpoints",title:"How to secure your endpoints",sidebar_label:"How to secure your endpoints",slug:"/secure-your-endpoints"},sidebar:"someSidebar",previous:{title:"Resources",permalink:"/blitz-guard/docs/resources"},next:{title:"Check permissions in the frontend",permalink:"/blitz-guard/docs/hook"}},p=[{value:"Guard.authorize",id:"guardauthorize",children:[]},{value:"Guard.authorizePipe",id:"guardauthorizepipe",children:[]},{value:"Check rules inside a query/mutation",id:"check-rules-inside-a-querymutation",children:[]}],l={toc:p};function c(e){var t=e.components,r=(0,a.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"guardauthorize"},"Guard.authorize"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"Guard.authorize")," HOF will protect your endpoint and authorize your user based on your rules.\nIf the user is not authorized an ",(0,o.kt)("inlineCode",{parentName:"p"},"AuthorizationError")," will be thrown."),(0,o.kt)("p",null,"Eg:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript",metastring:"{10}","{10}":!0},'import Guard from "app/guard/ability"\nimport db, { Prisma } from "db"\n\ntype UpdateProjectInput = Pick<Prisma.ProjectUpdateArgs, "where" | "data">\n\nasync function updateProject({ where, data }: UpdateProjectInput) {\n  return await db.project.update({ where, data })\n}\n\nexport default Guard.authorize("update", "project", updateProject)\n')),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"authorize(ability, resource, callback)")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"ability"),(0,o.kt)("br",null),"\nThe action that the user can perform.",(0,o.kt)("br",null),"\nDefault: ",(0,o.kt)("inlineCode",{parentName:"p"},"create, read, update, delete, manage")," ",(0,o.kt)("br",null),"\n",(0,o.kt)("a",{parentName:"p",href:"abilities"},"More information"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"resource"),(0,o.kt)("br",null),"\nThe subject of the action.",(0,o.kt)("br",null),"\nDefault: ",(0,o.kt)("inlineCode",{parentName:"p"},"all"),(0,o.kt)("br",null),"\n",(0,o.kt)("a",{parentName:"p",href:"resources"},"More information"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"callback")," :",(0,o.kt)("br",null),"\nIt's your query or mutation",(0,o.kt)("br",null),"\n",(0,o.kt)("inlineCode",{parentName:"p"},"async (args) => Promise<any>")))),(0,o.kt)("h2",{id:"guardauthorizepipe"},"Guard.authorizePipe"),(0,o.kt)("p",null,"If you are using pipes in your queries or mutations you can use Guard.authorizePipe as shown in the example. If the authorization fails it will throw an ",(0,o.kt)("inlineCode",{parentName:"p"},"AuthorizationError")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'import Guard from "app/guard/ability"\nimport { resolver } from "blitz"\nimport db from "db"\nimport * as z from "zod"\n\nexport const CreateProject = z.object({\n  name: z.string(),\n  dueDate: z.date().optional(),\n  orgId: z.number().optional(),\n})\n\nexport default resolver.pipe(\n  resolver.zod(CreateProject),\n  Guard.authorizePipe("create", "project"),\n  // Set default orgId\n  (input, { session }) => ({\n    ...input,\n    orgId: input.orgId ?? session.orgId,\n  }),\n  async (input, ctx) => {\n    console.log("Creating project...", input.orgId)\n    const project = await db.project.create({\n      data: input,\n    })\n    console.log("Created project")\n    return project\n  },\n)\n')),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"authorizePipe(ability, resource)")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"ability"),(0,o.kt)("br",null),"\nThe action that the user can perform.",(0,o.kt)("br",null),"\nDefault: ",(0,o.kt)("inlineCode",{parentName:"p"},"create, read, update, delete, manage")," ",(0,o.kt)("br",null),"\n",(0,o.kt)("a",{parentName:"p",href:"abilities"},"More information"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"resource"),(0,o.kt)("br",null),"\nThe subject of the action.",(0,o.kt)("br",null),"\nDefault: ",(0,o.kt)("inlineCode",{parentName:"p"},"all"),(0,o.kt)("br",null),"\n",(0,o.kt)("a",{parentName:"p",href:"resources"},"More information")))),(0,o.kt)("h2",{id:"check-rules-inside-a-querymutation"},"Check rules inside a query/mutation"),(0,o.kt)("p",null,"Sometimes you need to decide whether to execute portions of your code based on some conditions.\nYou can use ",(0,o.kt)("inlineCode",{parentName:"p"},"Guard.can")," for this purpose."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript",metastring:"{10}","{10}":!0},'...\nasync function updateProject({ where, data }: UpdateProjectInput, ctx: Ctx) {\n    const { can: canSendEmail, reason } = Guard.can( "send", "project_email", ctx, { where, data });\n\n    if (canSendEmail) await sendEmail()\n\n    return await db.project.update({ where, data })\n}\n...\n')),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"Guard.can(ability, resource, ctx, args) // { can: boolean, reason: string }")))}c.isMDXComponent=!0}}]);